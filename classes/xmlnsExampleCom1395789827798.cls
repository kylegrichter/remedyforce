//Generated by wsdl2apex

public class xmlnsExampleCom1395789827798 {
    public class prCreatePortTypeEndpoint1 {
        public String endpoint_x = 'http://localhost:11000/BusinessProcesses/Starter/RFtoRally_ServiceAgent.serviceagent/prCreatePortTypeEndpoint1';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        public wwwTibcoComSchemasRallyInterfaceSh.pvEsbSecurityInfo pvEsbSecurityInfo;
        private String pvEsbSecurityInfo_hns = 'pvEsbSecurityInfo=http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd';
        private String[] ns_map_type_info = new String[]{'http://xmlns.example.com/1395789827798', 'xmlnsExampleCom1395789827798', 'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd', 'wwwTibcoComSchemasRallyInterfaceSh'};
        public wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes prUpdate(String problemId,String problemSource,String categoy,String impact,String urgency,String description,String priority,String resolution,String status,String workaround,String rootCauseAnalysis,String phase,String rcaSource,String rcaReasonCode,String scrumTeam,String fallout,String configurationItem,String changeRecord,String migratedBy,String dependencies,String releaseManagerNotes,String checkoutBy,String checkoutDuration,String queue,String staff,String defectID,wwwTibcoComSchemasRallyInterfaceSh.linkedIncidents_element[] linkedIncidents,String rallyObjectUrl) {
            wwwTibcoComSchemasRallyInterfaceSh.prUpdate request_x = new wwwTibcoComSchemasRallyInterfaceSh.prUpdate();
            request_x.problemId = problemId;
            request_x.problemSource = problemSource;
            request_x.categoy = categoy;
            request_x.impact = impact;
            request_x.urgency = urgency;
            request_x.description = description;
            request_x.priority = priority;
            request_x.resolution = resolution;
            request_x.status = status;
            request_x.workaround = workaround;
            request_x.rootCauseAnalysis = rootCauseAnalysis;
            request_x.phase = phase;
            request_x.rcaSource = rcaSource;
            request_x.rcaReasonCode = rcaReasonCode;
            request_x.scrumTeam = scrumTeam;
            request_x.fallout = fallout;
            request_x.configurationItem = configurationItem;
            request_x.changeRecord = changeRecord;
            request_x.migratedBy = migratedBy;
            request_x.dependencies = dependencies;
            request_x.releaseManagerNotes = releaseManagerNotes;
            request_x.checkoutBy = checkoutBy;
            request_x.checkoutDuration = checkoutDuration;
            request_x.queue = queue;
            request_x.staff = staff;
            request_x.defectID = defectID;
            request_x.linkedIncidents = linkedIncidents;
            request_x.rallyObjectUrl = rallyObjectUrl;
            wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes response_x;
            Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes> response_map_x = new Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/BusinessProcesses/Starter/RFtoRally_ServiceAgent.serviceagent/prCreatePortTypeEndpoint1/prUpdate',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'prUpdateRequest',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'prUpdateResponse',
              'wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes taskUpdate(String taskId,String problemSource,String categoy,String impact,String urgency,String description,String priority,String resolution,String status,String inactive,String configurationItem,String incidentId,String changeRecord,String release,String queue,String staff,String rallyId,String rallyObjectUrl) {
            wwwTibcoComSchemasRallyInterfaceSh.updateTaskreq request_x = new wwwTibcoComSchemasRallyInterfaceSh.updateTaskreq();
            request_x.taskId = taskId;
            request_x.problemSource = problemSource;
            request_x.categoy = categoy;
            request_x.impact = impact;
            request_x.urgency = urgency;
            request_x.description = description;
            request_x.priority = priority;
            request_x.resolution = resolution;
            request_x.status = status;
            request_x.inactive = inactive;
            request_x.configurationItem = configurationItem;
            request_x.incidentId = incidentId;
            request_x.changeRecord = changeRecord;
            request_x.release = release;
            request_x.queue = queue;
            request_x.staff = staff;
            request_x.rallyId = rallyId;
            request_x.rallyObjectUrl = rallyObjectUrl;
            wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes response_x;
            Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes> response_map_x = new Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/BusinessProcesses/Starter/RFtoRally_ServiceAgent.serviceagent/prCreatePortTypeEndpoint1/taskUpdate',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'updateTaskRequest',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'updateTaskResponse',
              'wwwTibcoComSchemasRallyInterfaceSh.PRUpdateRes'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public wwwTibcoComSchemasRallyInterfaceSh.PRResponse prCreate(String problemId,String problemSource,String categoy,String impact,String urgency,String description,String priority,String resolution,String status,String workaround,String rootCauseAnalysis,String phase,String rcaSource,String rcaReasonCode,String scrumTeam,String fallout,String configurationItem,String changeRecord,String migratedBy,String dependencies,String releaseManagerNotes,String checkoutBy,String checkoutDuration,String queue,String staff,wwwTibcoComSchemasRallyInterfaceSh.linkedIncidents_element[] linkedIncidents) {
            wwwTibcoComSchemasRallyInterfaceSh.PRCreate_element request_x = new wwwTibcoComSchemasRallyInterfaceSh.PRCreate_element();
            request_x.problemId = problemId;
            request_x.problemSource = problemSource;
            request_x.categoy = categoy;
            request_x.impact = impact;
            request_x.urgency = urgency;
            request_x.description = description;
            request_x.priority = priority;
            request_x.resolution = resolution;
            request_x.status = status;
            request_x.workaround = workaround;
            request_x.rootCauseAnalysis = rootCauseAnalysis;
            request_x.phase = phase;
            request_x.rcaSource = rcaSource;
            request_x.rcaReasonCode = rcaReasonCode;
            request_x.scrumTeam = scrumTeam;
            request_x.fallout = fallout;
            request_x.configurationItem = configurationItem;
            request_x.changeRecord = changeRecord;
            request_x.migratedBy = migratedBy;
            request_x.dependencies = dependencies;
            request_x.releaseManagerNotes = releaseManagerNotes;
            request_x.checkoutBy = checkoutBy;
            request_x.checkoutDuration = checkoutDuration;
            request_x.queue = queue;
            request_x.staff = staff;
            request_x.linkedIncidents = linkedIncidents;
            wwwTibcoComSchemasRallyInterfaceSh.PRResponse response_x;
            Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRResponse> response_map_x = new Map<String, wwwTibcoComSchemasRallyInterfaceSh.PRResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              '/BusinessProcesses/Starter/RFtoRally_ServiceAgent.serviceagent/prCreatePortTypeEndpoint1/prCreate',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'PRCreate',
              'http://www.tibco.com/schemas/Rally_interface/SharedResources/Schemas/Schema.xsd',
              'prCreateResponse',
              'wwwTibcoComSchemasRallyInterfaceSh.PRResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
    }
}